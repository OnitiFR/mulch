# Sample configuration file for Mulch server (mulchd)
# Values here are defaults (except for seeds)

# Listen address of Mulchd API server (no IP = all interfaces)
listen = ":8686"

# Enable HTTPS-only for *API server*, using a Let's Encrypt certificate
# with specified domain. Default ("") is HTTP-only.
# See also proxy_acme_* settings below since the certificate is generated
# by mulch-proxy (port 443)
listen_https_domain = ""

# URI libvirt will use to contact the hypervisor
libvirt_uri = "qemu:///system"

# Storage path for libvirt disk images and "seeds" (Linux distributions)
# real world example: /srv/mulch
storage_path = "./var/storage"

# Mulch server (small) databases
# real world example: /var/lib/mulch
data_path = "./var/data"

# Temporary files path, empty = system default directory
# (may be useful for big backups compression, backup uploads, etc)
temp_path = ""

# Name prefix for Mulch VMs in libirt (so we don't collide with
# some existing VMs)
vm_prefix = "mulch-"

# This user will be created with VMs as a sudoers, and used for
# control and command of the VM by Mulch
mulch_super_user = "admin"

# Listen address for SSH proxy
proxy_listen_ssh = ":8022"

# Extra (limited) SSH pub keys (see ./etc/extra_authorized_keys.sample)
proxy_ssh_extra_keys_file = ""

# ACME protocol directory server
#
# We use Let's Encrypt *staging* directory by default.
# See https://letsencrypt.org/docs/staging-environment/ to get the
# staging "Fake LE Root X1" root certificate during tests.
#
# For Let's Encrypt production URL, you can use this "magic constant":
# proxy_acme_url = "LETS_ENCRYPT_PRODUCTION"
# Warning: define a proper email below!
# Warning: you may have to clear ./data/certs/ directory if you change this setting
proxy_acme_url = "https://acme-staging.api.letsencrypt.org/directory"

# Email will be used by CAs for notifications about issued certificates.
proxy_acme_email = "root@localhost.localdomain"

# Listen addresses (HTTP/HTTPS) for the Reverse Proxy
proxy_listen_http = ":80"
proxy_listen_https = ":443"

# Reverse Proxy Chaining (modes: "child" or "parent", empty = disabled)
proxy_chain_mode = ""

# if parent: listening address for the API
# if child: URL of the parent API to contact
# Supports HTTP or HTTPS
# Recommanded port: 8787 (ex: https://api.mydomain.tld:8787)
proxy_chain_parent_url = ""

# only for children: parent proxy will forward requests to this URL (us!)
# It must be a dedicated domain, HTTPS is available if you want to
# secure forwarded traffic (ex: https://forward.mymulchd.tld)
# warning: you may have to clear parent domain database if you change
# this value afterward
proxy_chain_child_url = ""

# Pre-Shared Key between children and the parent proxy (min length: 16)
proxy_chain_psk = ""

# Auto-rebuild will check everyday, at specified time, if any VM need
# an automatic rebuild (according its settings). Format: HH:MM
auto_rebuild_time = "23:30"

# Sample seeds
[[seed]]
name = "debian_10"
# debian remove the generic image, let's use Oniti service to get the latest URL
#url = "http://cdimage.debian.org/cdimage/openstack/current-10/debian-10-openstack-amd64.qcow2"
url = "https://files.oniti.fr/seeds/debian_10"

[[seed]]
name = "centos_7"
url = "http://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud.qcow2"

[[seed]]
name = "ubuntu_1804"
url = "http://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img"

[[seed]]
name = "ubuntu_2004"
url = "http://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64-disk-kvm.img"

#[[seed]]
#name = "ubuntu_2004_lamp"
#seeder = "https://raw.githubusercontent.com/OnitiFR/mulch/master/vm-samples/seeders/ubuntu_2004_lamp.toml"
