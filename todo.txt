- BUG: very annoying and rare mulch-proxy children-parent deadlock /!\
  - new: currently testing a dedicated watchdog for this issue, see watchdog.go
  - try to create a repro, see https://github.com/golang/go/issues/36026 for template
- switch default SSH user to app instead of admin (update client sshconfig.go doc)
- add timeout on VM creation scripts OR at least allow VM deletion
- add/check server timeouts when client disapears on do action (ex: kill -9 on "mulch do xx logs")
- add "variables" to TOML files? (like $author or $USER in VM name or URL, to create "generic" TOML files)
- provide a whereis feature / add "official" scripts (like wtf_is_my_vm.sh) to the client?
- proxy-chain: provide a way to clean old childs? (ex: proxy_chain_child_url have changed)
- proxy / proxy-chain request stats?
- check domains validity on VM create, PS: domain name validation is HARD :(
- "hanging" operations (ex: mulch do xyz log + vm rebuild)
- add comments to backups (and other objects ?)
- test "pre-allocated" backup disks on backup duration for "big VMs"?
- check TLS cert renewal!
  - reported issue: vm is deleted, recreated 3 months later, cert is invalid
  - Go changed the way cert are stored?
  - can't reproduce
- add a SSH keepalive for Run.SSHConn?
- mulchd "outage" of 2020-07-22:
    - investigate all the preparePipes.funcX found in the stacktrace (see m2 log)
    - check for a possible deadlock / missing timeout in the message hub? (same)
- still some hanging SSH shown in status (try with a client reboot?)
- full async API?
- write API public documentation
- continue tests on snapshots (see branch "snapshots")
- investigate why we seem to lose contact with (some) VMs when killing/restarting libvirtd
  - (dhcp/dnsmasq? ebtables? mulch-network restart?)
- libvirtd watchdog + alert (ex: timeout in VMStateDatabase?)
- clean VM XML template (ex: no display device [serial console])
- create a nice and shiny website for Mulch project
- VM tags
- have a look at ansible? (for sample scripts)
- remove the need to supply the VM name for redefine command?
  - pro-keep: sanity check for a dangerous op, but looks confusing to the user
  - con-remove: change controller logic
- shortcut for "do action" (ex: mulch open xyz) with completion?
- add 'env' to mulchd.toml? (overridden by VM's env directive)
- flag for compression / no compression on "vm backup"
- rights / limited access (warning: logs may expose sensitive data)
- check for missing response.Body.Close() (or things like that)
- check for io.Reader bad usages ("they must record the number of bytes read into the buffer, reslice the buffer, process that data, and only then, consult the error." https://dave.cheney.net/2019/09/05/dont-force-allocations-on-the-callers-of-your-api)

- change HTTP code from 200 to 4XX in controllers when things fails (ex: req.Stream.Failure)
  - in client, make the non-200 error message silent in stream mode?

- check connection and access rights
- differentiate "rights issues" from "libvirtd not running" issues
- check 'nwfilter-dumpxml clean-traffic' / libvirt-daemon-config-nwfilter during install?

- mulchd should be able to run with a remote libvirtd (StoragePath disallow this, currently)
- support passphrase for Mulch SSH key?
- move SSH Keys and MulchSuperUser to VM level?
- challenge based auth?
